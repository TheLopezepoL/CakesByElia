--CREAR TABLAS
DROP TABLE CLIENTE;
DROP TABLE PEDIDO;
DROP TABLE BITACORA;



CREATE TABLE Cliente(
    id_Cliente INT,
    nombre VARCHAR2(30) NOT NULL,
    telefono VARCHAR2(12) NOT NULL,
    CONSTRAINT pk_Cliente PRIMARY KEY (id_Cliente)
);

CREATE TABLE Pedido(
    id_Pedido INT,
    id_ProductoFK INT,
    id_SucursalFK INT,
    id_ClienteFK INT,
    fecha_Pedido DATE NOT NULL,
    fecha_Entrega DATE NOT NULL,
    direccion_Entrega VARCHAR2(120) NOT NULL,
    CONSTRAINT pk_Pedido PRIMARY KEY (id_Pedido),
    CONSTRAINT fk_Producto FOREIGN KEY (id_Producto) REFERENCES Producto(id_Producto),
    CONSTRAINT fk_Sucursal FOREIGN KEY (id_SucursalFK) REFERENCES Sucursal(id_Sucursal),
    CONSTRAINT fk_Cliente FOREIGN KEY (id_ClienteFK) REFERENCES Cliente(id_Cliente)
);

CREATE TABLE Bitacora(
    id_Bitacora INT,
    id_PedidoFK INT,
    tipo_Cambio VARCHAR2(15) NOT NULL,
    fecha DATE,
    CONSTRAINT pk_Bitacora PRIMARY KEY (id_Bitacora),
    CONSTRAINT fk_Pedido FOREIGN KEY (id_PedidoFK) REFERENCES Bitacora(id_Bitacora)
);


--CREAR SECUENCIAS
DROP SEQUENCE CLIENTE;
DROP SEQUENCE PEDIDO;
DROP SEQUENCE BITACORA;

CREATE SEQUENCE Cliente
    START WITH 1
    INCREMENT BY 1;
    
CREATE SEQUENCE Pedido
    START WITH 1
    INCREMENT BY 1;
    
CREATE SEQUENCE Bitacora
    START WITH 1
    INCREMENT BY 1;
    

--GET LAST ID Pedidos
CREATE OR REPLACE FUNCTION obtUltimoIDPedido
RETURN INT
AS maxID INT
BEGIN
    SELECT MAX(id_Pedido) INTO maxID
    FROM Pedido;]
    
    RETURN maxID;
END;
    
--CRUD BITACORA
CREATE OR REPLACE PROCEDURE agrBitacora (pID_Pedido INT, pTipo_Cambio VARCHAR2, pFecha DATE)
BEGIN
    INSERT INTO Bitacora(id_PedidoFK, tipo_Cambio, fecha)
    VALUES(pID_Pedido, pTipo_Cambio, pFecha);
END;


--PROCEDURES FOR BITACORA
CREATE OR REPLACE PROCEDURE bitAgrPedido (pID INT, pFecha DATE)
BEGIN
    EXEC agragrBitacora(pID, 'INSERT', pFecha);
END;

CREATE OR REPLACE PROCEDURE bitModPedido (pID INT, pFecha DATE)
BEGIN
    EXEC agragrBitacora(pID, 'UPDATE', pFecha);
END;

CREATE OR REPLACE PROCEDURE bitElmPedido (pID INT, pFecha DATE)
BEGIN
    EXEC agragrBitacora(pID, 'DELETE', pFecha);
END;


--PROCEDURES FOR DELETES
CREATE OR REPLACE PROCEDURE auxElmCliente(pID_Cliente INT)
BEGIN
    UPDATE Pedido
    SET id_Cliente = NULL
    WHERE id_Cliente = pID_Cliente;
END;


--CRUD's
CREATE OR REPLACE PROCEDURE agrCliente (pNombre VARCHAR2, pTelefono VARCHAR2)
BEGIN
    INSERT INTO Cliente(nombre, telefono)
    VALUES(pNombre, pTelefono);
END;

CREATE OR REPLACE PROCEDURE modCliente (pID INT, p pNombre VARCHAR2, pTelefono VARCHAR2)
BEGIN
    UPDATE Cliente
    SET nombre = pNombre, telefono = pTelefono
    WHERE id_Cliente = pID;
END;

CREATE OR REPLACE PROCEDURE elmCliente (pID INT)
BEGIN
    DELETE FROM Cliente
    WHERE id_Cliente = pID;
    
    EXEC auxElmCliente(pID);
END;

CREATE OR REPLACE PROCEDURE agrPedido (pID_Producto INT, pID_Sucursal INT, pID_Cliente INT, pFecha_Pedido DATE, pFecha_Entrega DATE, pDireccion_Entrega VARCHAR2, pFecha DATE)
DEFINE
    lastID INT;
BEGIN
    INSERT INTO Pedido(id_ProductoFK, id_SucursalFK, id_ClienteFK, fecha_Pedido, fecha_Entrega, direccion_Entrega)
    VALUES(pID_Producto INT, pID_Sucursal INT, pID_Cliente INT, pFecha_Pedido DATE, pFecha_Entrega DATE, pDireccion_Entrega VARCHAR2);
    
    lastID := obtUltimoIDPedido;
    EXEC bitAgrPedido(lastID, pFecha);
END;

CREATE OR REPLACE PROCEDURE modPedido (pID INT, pID_Producto INT, pID_Sucursal INT, pID_Cliente INT, pFecha_Pedido DATE, pFecha_Entrega DATE, pDireccion_Entrega VARCHAR2, pFecha DATE)
BEGIN
    UPDATE Pedido
    SET id_ProductoFK = pID_Producto, id_SucursalFK = pID_Sucursal, id_ClienteFK = pID_Cliente, fecha_Pedido = pFecha_Pedido, fecha_Entrega = pFecha_Entrega, direccion_Entrega = pDireccion_Entrega
    WHERE id_Pedido = pID;
    
    EXEC bitModPedido(pID, pFecha);
END;

CREATE OR REPLACE PROCEDURE elmPedido (pID INT, pFecha DATE)
BEGIN
    DELETE FROM Pedido